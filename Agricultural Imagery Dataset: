# description

import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Yükleme veri seti
eğitim_veri_üreticisi = ImageDataGenerator(ayarlar)
eğitim_verileri = eğitim_veri_üreticisi.flow_from_directory(eğitim_dizini)

# Bir konvansiyonel sinir ağı modeli tanımlayın
model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3, 3), aktivasyon='relu', giriş_şekli=(150, 150, 3)),
    tf.keras.layers.MaxPooling2D(havuz_boyutu=(2, 2)),
    tf.keras.layers.Conv2D(64, (3, 3), aktivasyon='relu'),
    tf.keras.layers.MaxPooling2D(havuz_boyutu=(2, 2)),
    tf.keras.layers.Conv2D(128, (3, 3), aktivasyon='relu'),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(64, aktivasyon='relu'),
    tf.keras.layers.Dense(1, aktivasyon='sigmoid')
])

# Modeli eğitme
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(eğitim_verileri, epochs=10, validation_data=validation_verileri)
